Data base setup

CREATE TABLE IF NOT EXISTS Vehicle (
                                       VehicleID        INT AUTO_INCREMENT PRIMARY KEY,
                                       CustomerUserID   INT,
                                       Make             VARCHAR(50),
                                       Model            VARCHAR(50),
                                       Year             INT,
                                       VINNumber        VARCHAR(50),
                                       Color            VARCHAR(30),
                                       FOREIGN KEY (CustomerUserID) REFERENCES Customer(UserID)
);

-- 9. Schedule (Bookings)
CREATE TABLE IF NOT EXISTS Schedule (
                                        CustomerUserID   INT,
                                        OfferingID       INT,
                                        StartDate        DATETIME,
                                        EndDate          DATETIME,
                                        AdminUserID      INT,
                                        VehicleID        INT,
                                        Status           ENUM('Scheduled','In Progress','Completed') DEFAULT 'Scheduled',
                                        TotalPrice       DECIMAL(10,2),
                                        PRIMARY KEY (CustomerUserID, OfferingID, StartDate, EndDate),
                                        FOREIGN KEY (CustomerUserID)   REFERENCES Customer(UserID),
                                        FOREIGN KEY (OfferingID)       REFERENCES ServiceOffering(OfferingID),
                                        FOREIGN KEY (AdminUserID)      REFERENCES Admin(UserID),
                                        FOREIGN KEY (VehicleID)        REFERENCES Vehicle(VehicleID)
);




book_service file code:



<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);
session_start();
require_once 'db_connect.php';

if (!isset($_SESSION['user']) || $_SESSION['user']['AccessLevel'] !== 'Customer') {
    header('Location: login.html');
    exit();
}

if (!empty($_POST['service_id']) && !empty($_POST['service_date']) && !empty($_POST['service_time']) &&
    !empty($_POST['vehicle_make']) && !empty($_POST['vehicle_model']) && !empty($_POST['vehicle_year'])) {

    // Get form data
    $serviceID = $_POST['service_id'];
    $date = $_POST['service_date'];
    $time = $_POST['service_time'];

    // Vehicle details
    $vehicleMake = $_POST['vehicle_make'];
    $vehicleModel = $_POST['vehicle_model'];
    $vehicleYear = $_POST['vehicle_year'];
    $vinNumber = !empty($_POST['vin_number']) ? $_POST['vin_number'] : null;

    $startDate = $date . ' ' . $time . ':00';
    $endDate = date('Y-m-d H:i:s', strtotime($startDate . ' +1 hour'));
    $adminID = 1; // temporary default for admin
    $employeeID = 2; // Using ID 2 which exists in your sample data (Richard Tan)
    $customerID = $_SESSION['user']['UserID'];

    // Check for duplicate booking
    $check = $pdo->prepare("SELECT * FROM Schedule
        WHERE CustomerUserID = :custID
        AND OfferingID = :offID
        AND StartDate = :start
        AND EndDate = :end");
    $check->execute([
        ':custID' => $customerID,
        ':offID' => $serviceID,
        ':start' => $startDate,
        ':end' => $endDate
    ]);

    if ($check->rowCount() > 0) {
        header('Location: customer.php?error=duplicate_booking');
        exit();
    }

    // First insert vehicle details
    $stmt_vehicle = $pdo->prepare("INSERT INTO Vehicle
        (CustomerUserID, Make, Model, Year, VINNumber)
        VALUES (:custID, :make, :model, :year, :vinNumber)");
    $stmt_vehicle->execute([
        ':custID' => $customerID,
        ':make' => $vehicleMake,
        ':model' => $vehicleModel,
        ':year' => $vehicleYear,
        ':vinNumber' => $vinNumber
    ]);
    $vehicleID = $pdo->lastInsertId();

    // Then insert into Schedule (without EmployeeUserID)
    $stmt = $pdo->prepare("INSERT INTO Schedule
        (CustomerUserID, OfferingID, StartDate, EndDate, TotalPrice, AdminUserID, VehicleID, Status)
        VALUES (:custID, :offID, :start, :end, 0, :adminID, :vehicleID, 'Scheduled')");
    $stmt->execute([
        ':custID' => $customerID,
        ':offID' => $serviceID,
        ':start' => $startDate,
        ':end' => $endDate,
        ':adminID' => $adminID,
        ':vehicleID' => $vehicleID
    ]);

    // Get the schedule details for the ScheduleEmployee table
    $scheduleDetails = [
        'customerID' => $customerID,
        'offeringID' => $serviceID,
        'startDate' => $startDate,
        'endDate' => $endDate
    ];

    // Determine which employee to assign based on service type
    $stmt_service = $pdo->prepare("SELECT OfferingName FROM ServiceOffering WHERE OfferingID = ?");
    $service = $stmt_service->fetch(PDO::FETCH_ASSOC);

    // Define which services go to which employee
    $performanceServices = ['Performance Tuning'];
    $exteriorServices = ['Vinyl Wrap', 'Window Tint', 'PPF'];

    // Default to Sarah (exterior specialist) if service not found
    $employeeID = 3;

    if ($service && in_array($service['OfferingName'], $performanceServices)) {
        $employeeID = 2; // Alex (Performance Technician)
    }

    // Assign employee in ScheduleEmployee table
    $stmt_employee = $pdo->prepare("INSERT INTO ScheduleEmployee
        (CustomerUserID, OfferingID, StartDate, EndDate, EmployeeUserID)
        VALUES (:custID, :offID, :start, :end, :empID)");
    $stmt_employee->execute([
        ':custID' => $customerID,
        ':offID' => $serviceID,
        ':start' => $startDate,
        ':end' => $endDate,
        ':empID' => $employeeID
    ]);

    // Redirect to success page
    header('Location: customer.php?message=booking_success');
    exit();
} else {
    header('Location: customer.php?error=invalid_input');
    exit();
}
?>



Pop up when clicked on view details:



<?php
session_start();
require_once 'db_connect.php';

// Ensure the user is logged in and is a Customer
if (!isset($_SESSION['user']) || $_SESSION['user']['AccessLevel'] !== 'Customer') {
    http_response_code(401); // Unauthorized
    echo "Unauthorized access";
    exit();
}

$customerID = $_SESSION['user']['UserID'];

try {
    // Enhanced query to properly get assigned employee
    $stmt = $pdo->prepare("
        SELECT
            SO.OfferingName,
            SO.ServiceDescription,
            SO.ServicePrice,
            S.StartDate,
            S.EndDate,
            S.Status,
            V.Make,
            V.Model,
            V.Year,
            V.VINNumber,
            V.Color,
            CONCAT(U_emp.FirstName, ' ', U_emp.LastName) AS EmployeeName,
            E.JobTitle AS EmployeeJobTitle,
            E.Specialization AS EmployeeSpecialization
        FROM Schedule S
        JOIN ServiceOffering SO ON S.OfferingID = SO.OfferingID
        JOIN Vehicle V ON S.VehicleID = V.VehicleID
        LEFT JOIN ScheduleEmployee SE ON
            S.CustomerUserID = SE.CustomerUserID AND
            S.OfferingID = SE.OfferingID AND
            S.StartDate = SE.StartDate AND
            S.EndDate = SE.EndDate
        LEFT JOIN Employee E ON SE.EmployeeUserID = E.UserID
        LEFT JOIN Users U_emp ON E.UserID = U_emp.UserID
        WHERE S.CustomerUserID = :custID
        ORDER BY S.StartDate DESC
    ");
    $stmt->bindValue(':custID', $customerID, PDO::PARAM_INT);
    $stmt->execute();

    $appointments = $stmt->fetchAll(PDO::FETCH_ASSOC);

    // Output as HTML cards
    foreach ($appointments as $appt) {
        $date = date('Y-m-d', strtotime($appt['StartDate']));
        $startTime = date('H:i', strtotime($appt['StartDate']));
        $endTime = date('H:i', strtotime($appt['EndDate']));
        $status = $appt['Status'];
        $badgeClass = match ($status) {
            'Scheduled' => 'bg-info',
            'In Progress' => 'bg-warning',
            'Completed' => 'bg-success',
            default => 'bg-secondary',
        };

        // Generate a unique ID for each modal
        $modalId = 'apptDetails-' . md5($appt['StartDate'] . $appt['OfferingName']);

        // Employee information display
        $employeeInfo = 'Not assigned yet';
        if (!empty($appt['EmployeeName'])) {
            $employeeInfo = "{$appt['EmployeeName']} ({$appt['EmployeeJobTitle']})";
            if (!empty($appt['EmployeeSpecialization'])) {
                $employeeInfo .= "<br><small>Specializes in: {$appt['EmployeeSpecialization']}</small>";
            }
        }

        echo "
        <div class='col-md-4 mb-4'>
            <div class='card p-3'>
                <h5>Service: {$appt['OfferingName']}</h5>
                <p>Date: {$date}</p>
                <p>Status: <span class='badge {$badgeClass}'>{$status}</span></p>
                <div class='d-grid gap-2'>
                    <button class='btn btn-secondary btn-sm' data-bs-toggle='modal' data-bs-target='#{$modalId}'>
                        View Details
                    </button>
                    <button class='btn btn-primary btn-sm manage-appointment-btn' data-appt-id='".md5($appt['StartDate'] . $appt['OfferingName'])."'>
                        Manage Appointment
                    </button>
                </div>
            </div>
        </div>

        <!-- Modal for this appointment -->
        <div class='modal fade' id='{$modalId}' tabindex='-1' aria-labelledby='{$modalId}Label' aria-hidden='true'>
            <div class='modal-dialog'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h5 class='modal-title' id='{$modalId}Label'>{$appt['OfferingName']} Details</h5>
                        <button type='button' class='btn-close' data-bs-dismiss='modal' aria-label='Close'></button>
                    </div>
                    <div class='modal-body'>
                        <div class='row'>
                            <div class='col-md-6'>
                                <h6>Appointment Details</h6>
                                <p><strong>Date:</strong> {$date}</p>
                                <p><strong>Time:</strong> {$startTime} - {$endTime}</p>
                                <p><strong>Status:</strong> <span class='badge {$badgeClass}'>{$status}</span></p>
                                <p><strong>Service Price:</strong> \$" . number_format($appt['ServicePrice'], 2) . "</p>
                                <p><strong>Description:</strong> {$appt['ServiceDescription']}</p>
                                <p><strong>Assigned Employee:</strong> {$employeeInfo}</p>
                            </div>
                            <div class='col-md-6'>
                                <h6>Vehicle Details</h6>
                                <p><strong>Make:</strong> {$appt['Make']}</p>
                                <p><strong>Model:</strong> {$appt['Model']}</p>
                                <p><strong>Year:</strong> {$appt['Year']}</p>
                                <p><strong>VIN:</strong> {$appt['VINNumber']}</p>
                                <p><strong>Color:</strong> {$appt['Color']}</p>
                            </div>
                        </div>
                    </div>
                    <div class='modal-footer'>
                        <button type='button' class='btn btn-secondary' data-bs-dismiss='modal'>Close</button>
                    </div>
                </div>
            </div>
        </div>
        ";
    }

    if (empty($appointments)) {
        echo "<p class='text-muted'>You have no appointments yet.</p>";
    }

} catch (PDOException $e) {
    echo "Error retrieving appointments: " . $e->getMessage();
}
?>
